{"version":3,"sources":["Feedback/FeedbackOptions.js","Feedback/Statistics.js","Feedback/Section.js","Feedback/Notification.js","App.js","index.js","Feedback/Feedback.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","className","styles","feedback__buttons","onClick","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","message","App","useState","setGood","setNeutral","setBad","visible","setVisible","state","console","log","countTotalFeedback","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","document","getElementById","module","exports"],"mappings":"sPAyBeA,EArBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,UAAWC,IAAOC,kBAElBC,QAAS,kBAAMN,EAAgBE,IAHjC,SAKGA,GAHIA,SCaAK,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCOSC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACJC,MCIQC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCEE,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOX,EAAP,KAAaY,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOV,EAAP,KAAgBY,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOT,EAAP,KAAYY,EAAZ,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KAiCA,OACE,gCACE,cAAC,EAAD,CAASV,MAAM,wBAAf,SACE,cAAC,EAAD,CACEf,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBApCgB,SAAAD,GACtB,OAAQA,GACN,IAAK,OACHqB,GAAQ,SAAAK,GAAK,OAAIA,EAAQ,KACzB,MACF,IAAK,UACHJ,GAAW,SAAAI,GAAK,OAAIA,EAAQ,KAC5B,MACF,IAAK,MACHH,GAAO,SAAAG,GAAK,OAAIA,EAAQ,KACxB,MACF,QACE,OAEJD,GAAW,QA0BT,eAAC,EAAD,CAASV,MAAM,aAAf,WACIS,GAAW,cAAC,EAAD,CAAcN,QAAQ,sBAClCM,GACC,cAAC,EAAD,CACEf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MA9BiB,WACzB,IAAMA,EAAQH,EAAOC,EAAUC,EAE/B,OADAgB,QAAQC,IAAIhB,GACLA,EA2BQiB,GACPhB,mBAzB8B,WACtC,IAAIA,EAAqB,EAIzB,OAHa,IAATJ,GAAsB,IAARE,IAChBE,EAAsBJ,GAAQE,EAAMF,GAAS,KAExCqB,KAAKC,MAAMlB,GAoBUmB,WCvDhCC,IAASC,OACP,mCACE,cAACf,EAAD,MAEFgB,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,kBAAoB,uC","file":"static/js/main.2298ddc5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Feedback.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div>\n      {options.map(option => (\n        <button\n          className={styles.feedback__buttons}\n          key={option}\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage}%</p>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { useState } from 'react';\nimport FeedbackOptions from './Feedback/FeedbackOptions';\nimport Statistics from './Feedback/Statistics';\nimport Section from './Feedback/Section';\nimport Notification from './Feedback/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [visible, setVisible] = useState(false);\n\n  const onLeaveFeedback = options => {\n    switch (options) {\n      case 'good':\n        setGood(state => state + 1);\n        break;\n      case 'neutral':\n        setNeutral(state => state + 1);\n        break;\n      case 'bad':\n        setBad(state => state + 1);\n        break;\n      default:\n        return;\n    }\n    setVisible(true);\n  };\n\n  const countTotalFeedback = () => {\n    const total = good + neutral + bad;\n    console.log(total);\n    return total;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    let positivePercentage = 0;\n    if (good !== 0 || bad !== 0) {\n      positivePercentage = (good / (bad + good)) * 100;\n    }\n    return Math.round(positivePercentage);\n  };\n\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {!visible && <Notification message=\"No feedback given\" />}\n        {visible && (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        )}\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback__buttons\":\"Feedback_feedback__buttons__3iBXe\"};"],"sourceRoot":""}